Lyte.Component.register("lyte-calendar",{_template:'<template tag-name="lyte-calendar">\n    <div class="{{containerClass}}" ontouchstart="{{action(\'record\',event)}}" ontouchend="{{action(\'decide\',event)}}">\n        <div class="lyteCalendarView">\n            <div>\n                <template is="if" value="{{navYield}}"><template case="true">\n                    <lyte-yield yield-name="navigator"></lyte-yield>\n                </template><template case="false">\n                    <div class="lyteCalendarNavigator">\n                        <template is="if" value="{{ifNotEquals(ltPropHeaderType,&quot;dropdown&quot;)}}"><template case="true">\n                            <template is="if" value="{{ltPropYear}}">\n                            <template case="true"><span class="lyteCalNav lyteCalyearNavLft" onclick="{{action(\'previous\',\'Y\',event)}}"></span></template>\n                            </template>\n                        </template></template>\n                        <span class="lyteCalNav lyteCaldLft" onclick="{{action(\'previous\',\'M\',event)}}"></span>\n                        <span class="lyteCalsCalMon">\n                            <template is="if" value="{{ifEquals(ltPropHeaderType,&quot;dropdown&quot;)}}"><template case="true">\n                                \n\n                                <lyte-dropdown lt-prop-callout="true" on-show="{{method(\'setClass\')}}" class="lyteCalMonthDD" lt-prop-tabindex="1" on-option-selected="{{method(\'optionSelected\',\'M\')}}">\n                                    <template is="registerYield" yield-name="yield">\n                                        <lyte-drop-box>\n                                            <lyte-drop-body>\n                                                <template is="for" items="{{monthNames}}" item="item" index="index">\n                                                    <lyte-drop-item data-value="{{item}}">{{item}}</lyte-drop-item>\n                                                </template>\n                                            </lyte-drop-body>\n                                        </lyte-drop-box>\n                                    </template>\n                                </lyte-dropdown>\n                                <lyte-dropdown lt-prop-callout="true" on-show="{{method(\'setClass\')}}" class="lyteCalYearDD" lt-prop-tabindex="2" on-option-selected="{{method(\'optionSelected\',\'Y\')}}">\n                                    <template is="registerYield" yield-name="yield">\n                                        <lyte-drop-box>\n                                            <lyte-drop-body>\n                                                <template is="for" items="{{years}}" item="item" index="index">\n                                                    <lyte-drop-item data-value="{{item}}">{{item}}</lyte-drop-item>\n                                                </template>\n                                            </lyte-drop-body>\n                                        </lyte-drop-box>\n                                    </template>\n                                </lyte-dropdown>\n\n                            </template><template case="false"><template is="if" value="{{expHandlers(ltPropHeaderType,\'===\',\'drilldown\')}}"><template case="true">\n                                <template is="if" value="{{expHandlers(viewType,\'===\',\'dateView\')}}"><template case="true">\n                                     <span class="lyteDrillCalHeaderButton" onclick="{{action(\'changeToMonthView\',event)}}">\n                                        <span class="lyteCalsCalMonth">{{lyteUiGetMonthOrYear(monthHeader,"M")}}</span>\n                                        <span class="lyteCalsCalYear">{{lyteUiGetMonthOrYear(monthHeader,"Y")}}</span>\n                                    </span>\n                                </template><template case="false"><template is="if" value="{{expHandlers(viewType,\'===\',\'monthView\')}}"><template case="true">\n                                    <span class="lyteDrillCalHeaderButton" onclick="{{action(\'changeToDecadeView\',event)}}">\n                                        <span class="lyteCalsCalYear">{{currentYear}}</span>\n                                    </span>\n                                </template><template case="false"><template is="if" value="{{expHandlers(viewType,\'===\',\'decadeView\')}}"><template case="true">\n                                    <span class="lyteDrillCalHeaderButton lyteDrillCalYearListHeader">\n                                        {{decadeStart}} - {{decadeEnd}}\n                                    </span>\n                                </template></template></template></template></template></template>\n                            </template><template case="false">\n                                <span class="lyteCalsCalMonth">{{lyteUiGetMonthOrYear(monthHeader,"M")}}</span>\n                                <span class="lyteCalsCalYear">{{lyteUiGetMonthOrYear(monthHeader,"Y")}}</span>\n                            </template></template></template></template>\n                        </span>\n                        <span class="lyteCalNav lyteCaldRgt" onclick="{{action(\'next\',\'M\',event)}}"></span>\n                        <template is="if" value="{{ifNotEquals(ltPropHeaderType,&quot;dropdown&quot;)}}"><template case="true">\n                            <template is="if" value="{{ltPropYear}}">\n                                <template case="true"><span class="lyteCalNav lyteCalyearNavRgt" onclick="{{action(\'next\',\'Y\',event)}}"></span></template>\n                            </template>\n                        </template></template>\n                    </div>\n                </template></template>\n                \n            </div>\n            <div class="lyteCalTableContainer">\n                <template is="if" value="{{expHandlers(expHandlers(ltPropHeaderType,\'!==\',\'drilldown\'),\'||\',expHandlers(expHandlers(ltPropHeaderType,\'===\',\'drilldown\'),\'&amp;&amp;\',expHandlers(viewType,\'===\',\'dateView\')))}}"><template case="true">\n                    <div class="lyteCalTableRowHeader">\n                        <template is="for" items="{{daysOfWeek}}" item="day" indexval="idod">\n                            <div class="lyteCalTableCellHeader">{{lyteUiI18n(day)}}</div>\n                        </template>\n                    </div>\n                </template></template>\n                <div class="lyteCalTableRowGroup">\n                    <template is="if" value="{{expHandlers(ltPropHeaderType,\'!==\',\'drilldown\')}}"><template case="true">\n                        <template is="for" items="{{matrix}}" item="vector" indexval="rowid">\n                            <template is="if" value="{{lyteUiCheckEmpty(vector)}}">\n                                <template case="false">\n                                    <div class="lyteCalTableRow">\n                                        <template is="for" items="{{vector}}" item="date" indexval="cellid">\n                                            <template is="if" value="{{lyteUiCheckInRange(ltPropMinDate,ltPropMaxDate,date.val,ltPropFormat)}}">\n                                                <template case="true">\n                                                    <template is="if" value="{{date.emptyBlock}}">\n                                                        <template case="true">\n                                                            <div class="lyteCalEmpty"></div>\n                                                        </template>\n                                                        <template case="false">\n                                                            <div data-date="{{date.val}}" onclick="{{action(\'dateSelected\',event)}}" class="{{date.clsname}}"><span class="lyteCalDateSpan">{{date.date}}</span></div>\n                                                        </template>\n                                                    </template>\n                                                </template>\n                                                <template case="false">\n                                                    <template is="if" value="{{date.emptyBlock}}">\n                                                        <template case="true">\n                                                            <div class="lyteCalEmpty"></div>\n                                                        </template>\n                                                        <template case="false">\n                                                            <div data-date="{{date.val}}" class="{{date.clsname}}"><span class="lyteCalDateSpan">{{date.date}}</span></div>\n                                                        </template>\n                                                    </template>\n                                                </template>\n                                            </template>\n                                        </template>\n                                    </div>\n                                </template>\n                            </template>\n                        </template>\n                    </template><template case="false">\n                        <template is="if" value="{{expHandlers(viewType,\'===\',\'dateView\')}}"><template case="true">\n                            <template is="for" items="{{matrix}}" item="vector" indexval="rowid">\n                                <template is="if" value="{{lyteUiCheckEmpty(vector)}}">\n                                    <template case="false">\n                                        <div class="lyteCalTableRow">\n                                            <template is="for" items="{{vector}}" item="date" indexval="cellid">\n                                                <template is="if" value="{{lyteUiCheckInRange(ltPropMinDate,ltPropMaxDate,date.val,ltPropFormat)}}">\n                                                    <template case="true">\n                                                        <template is="if" value="{{date.emptyBlock}}">\n                                                            <template case="true">\n                                                                <div class="lyteCalEmpty"></div>\n                                                            </template>\n                                                            <template case="false">\n                                                                <div data-date="{{date.val}}" onclick="{{action(\'dateSelected\',event)}}" class="{{date.clsname}}"><span class="lyteCalDateSpan">{{date.date}}</span></div>\n                                                            </template>\n                                                        </template>\n                                                    </template>\n                                                    <template case="false">\n                                                        <template is="if" value="{{date.emptyBlock}}">\n                                                            <template case="true">\n                                                                <div class="lyteCalEmpty"></div>\n                                                            </template>\n                                                            <template case="false">\n                                                                <div data-date="{{date.val}}" class="{{date.clsname}}"><span class="lyteCalDateSpan">{{date.date}}</span></div>\n                                                            </template>\n                                                        </template>\n                                                    </template>\n                                                </template>\n                                            </template>\n                                        </div>\n                                    </template>\n                                </template>\n                            </template>\n                        </template><template case="false"><template is="if" value="{{expHandlers(viewType,\'===\',\'monthView\')}}"><template case="true">\n                            <template is="for" items="{{monthViewData}}" item="row" index="rowIndex">\n                                <div class="lyteCalTableRow">\n                                    <template is="for" items="{{row}}" item="column" index="columnIndex">\n                                        <div onclick="{{action(\'monthSelected\',event)}}" class="{{column[\'class\']}}" data-date="{{column[\'systemValue\']}}">\n                                            {{column[\'displayValue\']}}\n                                        </div>\n                                    </template>\n                                </div>\n                            </template>\n                        </template><template case="false"><template is="if" value="{{expHandlers(viewType,\'===\',\'decadeView\')}}"><template case="true">\n                            <template is="for" items="{{decadeViewData}}" item="row" index="rowIndex">\n                                <div class="lyteCalTableRow">\n                                    <template is="for" items="{{row}}" item="column" index="columnIndex">\n                                        <template is="if" value="{{expHandlers(column.emptyBlock,\'!\')}}"><template case="true">\n                                            <div onclick="{{action(\'yearSelected\',event)}}" class="lyteCalTableCell {{column.class}}" data-date="{{column.year}}">\n                                                {{column.year}}\n                                            </div>\n                                        </template><template case="false">\n                                            <div class="lyteCalEmpty">\n\n                                            </div>\n                                        </template></template>\n                                    </template>\n                                </div>\n                            </template>\n                        </template></template></template></template></template></template>\n                    </template></template>\n                </div>\n            </div>\n            <div>\n                <div class="lyteCalBtns">\n                    <template is="if" value="{{showToday}}">\n                        <template case="true"><p class="lyteCalCurrentDate"><a onclick="{{action(\'today\',event)}}">{{lyteUiI18n(\'today\')}}</a></p></template>\n                    </template>\n                    <template is="if" value="{{ltPropYield}}">\n                        <template case="true">\n                            <lyte-yield yield-name="footer"></lyte-yield>\n                        </template>\n                    </template>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>',_dynamicNodes:[{type:"attr",position:[1]},{type:"attr",position:[1,1,1,1]},{type:"if",position:[1,1,1,1],cases:{true:{dynamicNodes:[{type:"insertYield",position:[1]}]},false:{dynamicNodes:[{type:"attr",position:[1,1]},{type:"if",position:[1,1],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{true:{dynamicNodes:[{type:"attr",position:[0]}]}},default:{}}]}},default:{}},{type:"attr",position:[1,3]},{type:"attr",position:[1,5,1]},{type:"if",position:[1,5,1],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"registerYield",position:[1,1],dynamicNodes:[{type:"attr",position:[1,1,1]},{type:"for",position:[1,1,1],dynamicNodes:[{type:"attr",position:[1]},{type:"text",position:[1,0]},{type:"componentDynamic",position:[1]}]},{type:"componentDynamic",position:[1,1]},{type:"componentDynamic",position:[1]}]},{type:"componentDynamic",position:[1]},{type:"attr",position:[3]},{type:"registerYield",position:[3,1],dynamicNodes:[{type:"attr",position:[1,1,1]},{type:"for",position:[1,1,1],dynamicNodes:[{type:"attr",position:[1]},{type:"text",position:[1,0]},{type:"componentDynamic",position:[1]}]},{type:"componentDynamic",position:[1,1]},{type:"componentDynamic",position:[1]}]},{type:"componentDynamic",position:[3]}]},false:{dynamicNodes:[{type:"attr",position:[0]},{type:"if",position:[0],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"text",position:[1,1,0]},{type:"text",position:[1,3,0]}]},false:{dynamicNodes:[{type:"attr",position:[0]},{type:"if",position:[0],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"text",position:[1,1,0]}]},false:{dynamicNodes:[{type:"attr",position:[0]},{type:"if",position:[0],cases:{true:{dynamicNodes:[{type:"text",position:[1,1]},{type:"text",position:[1,3]}]}},default:{}}]}},default:{}}]}},default:{}}]},false:{dynamicNodes:[{type:"text",position:[1,0]},{type:"text",position:[3,0]}]}},default:{}}]}},default:{}},{type:"attr",position:[1,7]},{type:"attr",position:[1,9]},{type:"if",position:[1,9],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{true:{dynamicNodes:[{type:"attr",position:[0]}]}},default:{}}]}},default:{}}]}},default:{}},{type:"attr",position:[1,1,3,1]},{type:"if",position:[1,1,3,1],cases:{true:{dynamicNodes:[{type:"attr",position:[1,1]},{type:"for",position:[1,1],dynamicNodes:[{type:"text",position:[1,0]}]}]}},default:{}},{type:"attr",position:[1,1,3,3,1]},{type:"if",position:[1,1,3,3,1],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"for",position:[1],dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{false:{dynamicNodes:[{type:"attr",position:[1,1]},{type:"for",position:[1,1],dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{true:{dynamicNodes:[]},false:{dynamicNodes:[{type:"attr",position:[1]},{type:"text",position:[1,0,0]}]}},default:{}}]},false:{dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{true:{dynamicNodes:[]},false:{dynamicNodes:[{type:"attr",position:[1]},{type:"text",position:[1,0,0]}]}},default:{}}]}},default:{}}]}]}},default:{}}]}]},false:{dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"for",position:[1],dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{false:{dynamicNodes:[{type:"attr",position:[1,1]},{type:"for",position:[1,1],dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{true:{dynamicNodes:[]},false:{dynamicNodes:[{type:"attr",position:[1]},{type:"text",position:[1,0,0]}]}},default:{}}]},false:{dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{true:{dynamicNodes:[]},false:{dynamicNodes:[{type:"attr",position:[1]},{type:"text",position:[1,0,0]}]}},default:{}}]}},default:{}}]}]}},default:{}}]}]},false:{dynamicNodes:[{type:"attr",position:[0]},{type:"if",position:[0],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"for",position:[1],dynamicNodes:[{type:"attr",position:[1,1]},{type:"for",position:[1,1],dynamicNodes:[{type:"attr",position:[1]},{type:"text",position:[1,1]}]}]}]},false:{dynamicNodes:[{type:"attr",position:[0]},{type:"if",position:[0],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"for",position:[1],dynamicNodes:[{type:"attr",position:[1,1]},{type:"for",position:[1,1],dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"text",position:[1,1]}]},false:{dynamicNodes:[]}},default:{}}]}]}]}},default:{}}]}},default:{}}]}},default:{}}]}},default:{}},{type:"attr",position:[1,1,5,1,1]},{type:"if",position:[1,1,5,1,1],cases:{true:{dynamicNodes:[{type:"attr",position:[0,0]},{type:"text",position:[0,0,0]}]}},default:{}},{type:"attr",position:[1,1,5,1,3]},{type:"if",position:[1,1,5,1,3],cases:{true:{dynamicNodes:[{type:"insertYield",position:[1]}]}},default:{}}],_observedAttributes:["ltPropStartDate","ltPropEndDate","ltPropCurrentDate","ltPropFormat","ltPropYear","ltPropMonthHeaderFormat","daysOfWeek","monthSystemValues","monthNames","shortHands","todayName","viewDate","changeData","ltPropYield","ltPropMinDate","ltPropMaxDate","ltPropStartWeekDay","navYield","selectDate","currentDatechanged","ltPropFillRows","ltPropNumberOfRows","callFrmDidcnct","monthDD","yearDD","years","ltPropHeaderType","cords","start","prev","tt","showToday","monthViewTableArray"],data:function(){return{ltPropStartDate:Lyte.attr("string",{default:""}),ltPropEndDate:Lyte.attr("string",{default:""}),ltPropCurrentDate:Lyte.attr("string",{default:""}),ltPropFormat:Lyte.attr("string",{default:"MM/DD/YYYY"}),ltPropYear:Lyte.attr("boolean",{default:!0}),ltPropMonthHeaderFormat:Lyte.attr("string",{default:"MMMM YYYY"}),daysOfWeek:Lyte.attr("array",{default:[]}),monthSystemValues:Lyte.attr("array",{default:["January","February","March","April","May","June","July","August","September","October","November","December"]}),monthNames:Lyte.attr("array",{default:["January","February","March","April","May","June","July","August","September","October","November","December"]}),shortHands:Lyte.attr("array",{default:["Jan","Feb","Mar","Apr","short.may","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}),todayName:Lyte.attr("string",{default:"Today"}),viewDate:Lyte.attr("object",{default:{}}),changeData:Lyte.attr("number",{default:0}),ltPropYield:Lyte.attr("boolean",{default:!1}),ltPropMinDate:Lyte.attr("string",{default:""}),ltPropMaxDate:Lyte.attr("string",{default:""}),ltPropStartWeekDay:Lyte.attr("number",{default:1}),navYield:Lyte.attr("boolean",{default:!1}),selectDate:Lyte.attr("boolean",{default:!0}),currentDatechanged:Lyte.attr("number",{default:0}),ltPropFillRows:Lyte.attr("boolean",{default:!0}),ltPropNumberOfRows:Lyte.attr("number",{default:6}),callFrmDidcnct:Lyte.attr("boolean",{default:!1}),monthDD:Lyte.attr("object"),yearDD:Lyte.attr("object"),years:Lyte.attr("array",{default:[1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2e3,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100]}),ltPropHeaderType:Lyte.attr("string",{default:"default"}),cords:Lyte.attr("object",{default:{}}),start:Lyte.attr("number"),prev:Lyte.attr("boolean"),tt:Lyte.attr("boolean",{default:!0}),showToday:Lyte.attr("boolean",{default:!0}),monthViewTableArray:Lyte.attr("array",{default:[]})}},changeBodyContainerClass:function(){var t=this.$node.querySelector(".lyteCalTableContainer"),e=this.getData("viewType");"dateView"===e?(t.classList.remove("lyteDrillCalMonthView"),t.classList.remove("lyteDrillCalYearView")):"monthView"===e?(t.classList.add("lyteDrillCalMonthView"),t.classList.remove("lyteDrillCalYearView")):"decadeView"===e&&(t.classList.remove("lyteDrillCalMonthView"),t.classList.add("lyteDrillCalYearView"))}.observes("viewType"),changeDaysOfWeek:function(){var t,e=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],a=this.getData("ltPropStartWeekDay"),i=[];for(t=0;t<7;t++)i.push(e[(t+a)%7]);this.setData("daysOfWeek",i)},isYYFormat:function(){var t=this.getData("ltPropFormat");return/\byy\b/gi.test(t)},outsideBoundary:function(t){var e=t.getFullYear()-(new Date).getFullYear(),a=this.isMomentSupported?$L.moment():{uL:19,lL:80};return e>a.uL||(e<-a.lL||void 0)},didDestroy:function(){delete this.$node.revertToToday},setMonthAndYearDropdown:function(){if(!this.getData("navYield")&&"dropdown"==this.getData("ltPropHeaderType")&&this.getData("monthDD")&&this.getData("yearDD")){var t,e=this.getData("monthHeader").split(" "),a=this.getData("ltPropMonthHeaderFormat"),i=[];if("callFrmDidcnct"==arguments[0].item){/MMMM YYYY/gi.test(a)?t=this.getData("monthNames"):/MMM YYYY/gi.test(a)&&(t=this.getData("shortHands"));for(var n=0;n<t.length;n++)i[n]=_lyteUiUtils.i18n(t[n]);this.setData("monthNames",i)}this.getData("monthDD").component.setData("ltPropSelected",e[0]),this.getData("yearDD").component.setData("ltPropSelected",e[1])}}.observes("monthHeader","callFrmDidcnct"),startWeekDayObserver:function(){this.changeDaysOfWeek()}.observes("ltPropStartWeekDay"),monthHeaderObserver:function(){this.buildDateViewHeader()}.observes("monthNames.[]"),getMonthHeader:function(){var t,e=this.getData("ltPropMonthHeaderFormat"),a="";return/MMMM YYYY/gi.test(e)?(t=this.getData("monthNames"),a=_lyteUiUtils.i18n(t[this.getData("viewDate").getMonth()])+" "+this.getData("viewDate").getFullYear()):/MMM YYYY/gi.test(e)&&(t=this.getData("shortHands"),a=_lyteUiUtils.i18n(t[this.getData("viewDate").getMonth()])+" "+this.getData("viewDate").getFullYear()),a},revert:function(t){var e=new Date(this.getData("viewDate").getTime()),a=new Date;a.setDate(1);var i=new Date(a.getTime());this.setData("viewDate",a),this.setAndBuildView("dateView",t),this.setData("showToday",!1),!this.getMethods("onNavigate")||e.getMonth()===i.getMonth()&&e.getFullYear()===i.getFullYear()||this.executeMethod("onNavigate",t,this.getDateFromFormat(e,this.getData("ltPropFormat")),this.getDateFromFormat(i,this.getData("ltPropFormat")),this)},getDateFromFormat:function(t,e){return this.isMomentSupported?this.getDateStringFromMoment(t,e):this.getDateStringManually(t,e)},getDateStringFromMoment:function(t,e){return e=this.getRelevantFormat(e),$L.moment(t).format(e)},resolveConflicts:function(t){var e=/(\bd\b|\bdd\b|\bddd\b|\bdddd\b)/.exec(t),a=(e||{}).index,i=(e||[])[0].length||0;return isNaN(a)?t.toUpperCase():t.substring(0,a+i)+(t.substring(a+i)||"").toUpperCase()},isConflictingFormat:function(t){return(t.match(/(\bd\b|\bdd\b|\bddd\b|\bdddd\b)/gi)||[]).length>1},getRelevantFormat:function(t){return this.isConflictingFormat(t)?this.resolveConflicts(t):t.toUpperCase()},getDateStringManually:function(t,e){var a,i=t.getDate(),n=t.getFullYear(),s=t.getMonth()+1;return e=e.toUpperCase(),s<10&&(s="0"+s),i<10&&(i="0"+i),/(MMMM|DD|YYYY).+(MMMM|DD|YYYY).+(YYYY|MMMM|DD)/gi.test(e)?(a=["January","February","March","April","May","June","July","August","September","October","November","December"],e=(e=(e=e.replace("MMMM",a[s-1])).replace("DD",i)).replace("YYYY",n)):/(MMM|DD|YYYY).+(MMM|DD|YYYY).+(YYYY|MMM|DD)/gi.test(e)?(a=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],e=(e=(e=e.replace("MMM",a[s-1])).replace("DD",i)).replace("YYYY",n)):/(YYYY).+(MM).+(DD)/gi.test(e)?e=(e=(e=e.replace("MM",s)).replace("DD",i)).replace("YYYY",n):/(MM).+(DD).+(YYYY)/gi.test(e)?e=(e=(e=e.replace("MM",s)).replace("DD",i)).replace("YYYY",n):/(DD).+(MM).+(YYYY)/gi.test(e)&&(e=(e=(e=e.replace("MM",s)).replace("DD",i)).replace("YYYY",n)),e},isLeapYear:function(t){return t%4==0&&t%100!=0||t%400==0},getNumber:function(t,e){return this.isLeapYear.call(this,e)&&1==t?29:[31,28,31,30,31,30,31,31,30,31,30,31][t]},showtoday:function(){var t=new Date;t.getMonth()!=this.getData("viewDate").getMonth()||t.getYear()!=this.getData("viewDate").getYear()?this.setData("showToday",!0):this.setData("showToday",!1)},reset:function(t){t.setHours(0),t.setMinutes(0),t.setSeconds(0),t.setMilliseconds(0)},checkDate:function(t){var e,a,i=this.getData("ltPropMinDate")||"",n=this.getData("ltPropMaxDate")||"";if(this.reset(t),""===i&&""===n)return!0;if(""!==i&&""===n){if(e=this.stringToDate(i,this.getData("ltPropFormat")),this.reset(e),t>=e)return!0}else if(""!==i&&""!==n){if(e=this.stringToDate(i,this.getData("ltPropFormat")),this.reset(e),a=this.stringToDate(n,this.getData("ltPropFormat")),this.reset(a),t>=e&&t<=a)return!0}else if(a=this.stringToDate(n,this.getData("ltPropFormat")),this.reset(a),t<=a)return!0;return!1},numberOfRowsChange:function(){var t=this.getData("ltPropNumberOfRows");try{if(t<5)throw"Calendar failed to render. The number of rows should be greater than 4."}catch(t){return void console.error(t)}this.setDatesFunction()}.observes("ltPropNumberOfRows"),setDates:function(){this.setDatesFunction()}.observes("ltPropStartDate","ltPropEndDate","changeData","ltPropMinDate","ltPropMaxDate","ltPropFormat","ltPropStartWeekDay"),getNumberOfFirstRowDates:function(t){var e=this.getData("ltPropStartWeekDay");return 0==t?0===e?7:e:t<e?e-t:7-(t-e)},getNumberToSubtract:function(t){var e=this.getData("ltPropStartWeekDay");return 0==t?0==e?0:7-e:t<e?7-(e-t):t-e},getFirstDay:function(t,e){var a;return(a=e-(a=t-7*Math.floor(t/7)-1))<0&&(a=7-a),a},getRemainingDays:function(t,e){var a=t-e;return a-=28},inc:function(t,e){return t>0&&6==e?7:e},setDatesFunction:function(){var t=this.getData("ltPropNumberOfRows"),e=this.getData("ltPropFillRows"),a=(this.getData("ltPropFormat"),!1),i=[],n=this.getData("viewDate"),s=n.getDay(),o=n.getDate(),r=this.getFirstDay(o,s),l=n.getMonth(),p=n.getFullYear(),d=this.getNumber(l,p),c=this.getNumberOfFirstRowDates(r),m=this.getRemainingDays(d,c);t=this.inc(m,t);var u=new Date(l+1+"/1/"+p),h=this.getNumberToSubtract(r);u.setDate(u.getDate()-h);for(var y=new Date,D=0;D<t&&!a;D++){i.push([]);for(var g=0;g<7;g++)if(e||l===u.getMonth())if(e&&this.isYYFormat()&&this.outsideBoundary(u))i[D].push({emptyBlock:!0}),u.setDate(u.getDate()+1),0!=D&&(a=!0);else{var f="lyteCalCdate",v=u.getMonth(),w=new Date(this.getData("viewDate").getTime()).getMonth(),M=u.getDate(),Y=this.getData("ltPropCurrentDate")?this.stringToDate(this.getData("ltPropCurrentDate"),this.getData("ltPropFormat")):"nodate",b=u.getYear(),C=this.checkDate(u),F=""!==(this.getData("ltPropMinDate")||"")||""!==(this.getData("ltPropMaxDate")||"");w!==v?F?C||(f+=" lyteCalDisabled"):f+=" lyteCalGray":F&&!C&&(f+=" lyteCalDisabled"),"nodate"!==Y&&"Invalid Date"!==Y&&v==Y.getMonth()&&Y.getDate()==M&&Y.getYear()==b&&this.getData("selectDate")&&(f+=" lyteCalSel"),y.getMonth()===v&&y.getDate()===M&&y.getYear()===b&&this.getData("selectDate")&&(f+=" lyteCalToday"),0!=u.getDay()&&6!=u.getDay()||(f+=" lyteCalWeekend"),f+=" lyteCalTableCell";var P={};P.date=u.getDate(),P.clsname=f,P.val=this.getDateFromFormat.call(this,u,this.getData("ltPropFormat")),i[D].push(P),u.setDate(u.getDate()+1)}else i[D].push({emptyBlock:!0}),u.setDate(u.getDate()+1),0!=D&&(a=!0)}this.setData("matrix",i)},executeViewDateChanges:function(){this.getMethods("onViewdateChange")&&this.executeMethod("onViewdateChange",this,this.getData("viewDate"))}.observes("viewDate"),getProperMonth:function(t){var e;return(e={jan:1,feb:2,mar:3,apr:4,may:5,jun:6,jul:7,aug:8,sep:9,oct:10,nov:11,dec:12}[t=t.toLowerCase()]||{january:1,february:2,march:3,april:4,may:5,june:6,july:7,august:8,september:9,october:10,november:11,december:12}[t])||0===e?e-1:parseFloat(t)-1},isProperDate:function(t,e,a){return a<=this.getNumber(e,t)},getDateObjFromString:function(t,e){try{var a,i,n=t.match(/([\da-z]+)/gi),s=(e=e.toUpperCase()).match(/([a-z]+)/gi),o=new Date,r=0,l=["Y","M","D"];if(o.setDate(1),3!==n.length)return"Invalid Date";for(;r<s.length;){var p=this.getOrderIndex(s,l[r]);if(0==r)o.setFullYear(a=n[p]);else if(1==r){if((i=this.getProperMonth(n[p]))<0||i>11)return"Invalid Date";o.setMonth(i)}else if(2==r){if(!this.isProperDate(a,i,n[p]))return"Invalid Date";o.setDate(n[p])}if("Invalid Date"===o.toString())return o.toString();r++}return o}catch(t){return"Invalid Date"}},getDateObjFromMoment:function(t,e){var a;e=this.getRelevantFormat(e);try{a=$L.moment(t,e).getDObj()}catch(t){a="Invalid Date"}return a||"Invalid Date"},stringToDate:function(t,e){return this.isMomentSupported?this.getDateObjFromMoment(t,e):this.getDateObjFromString(t,e)},getOrderIndex:function(t,e){for(var a=0;a<t.length;a++)if(t[a].charAt(0)===e)return a;return-1},buildYears:function(){var t,e=this.buildMinAndMaxYear(),a=e.maxYear,i=[];for(t=e.minYear;t<=a;t++)i.push(t.toString());this.setData("years",i)},buildMinAndMaxYear:function(){var t=new Date,e=this.isYYFormat(),a=t.getFullYear(),i=this.isMomentSupported?$L.moment():{uL:19,lL:80},n=i.uL,s=i.lL;return{maxYear:e?a+n:2100,minYear:e?a-s:1900}},setAndBuildView:function(t,e,a){var i=this.getData("viewType"),n=t;this.setData("viewType",t),"monthView"===t?this.buildMonthView():"decadeView"===t?this.buildDecadeView():"dateView"===t&&this.buildDateView(),a||i===n||this.getMethods("onViewChange")&&this.executeMethod("onViewChange",e,t,this)},buildDateView:function(){this.buildDateViewHeader(),this.buildDateViewContent(),this.showtoday()},buildDateViewHeader:function(){this.setData("monthHeader",this.getMonthHeader())},buildDateViewContent:function(){this.setDatesFunction()},buildMonthView:function(){this.buildMonthViewHeader(),this.buildMonthViewContent()},buildMonthViewHeader:function(){var t=this.getData("viewDate").getFullYear();this.setData("currentYear",t)},buildMonthViewContent:function(){for(var t,e,a=this.getData("monthSystemValues"),i=this.getData("shortHands"),n=0,s=[];n<3;n++)for(s.push([]),t=0;t<4;t++)e=4*n+t,s[n].push({displayValue:_lyteUiUtils.i18n(i[e]),systemValue:a[e],class:this.getProperClassForMonthView(e)});this.setData("monthViewData",s)},getProperClassForMonthView:function(t){var e=this.getData("viewDate").getFullYear(),a=this.getCurrentMonth(),i="lyteCalTableCell";return i+=this.getCurrentYear()===e&&t===a?" lyteDrillCalCurrentMonth":""},getCurrentYear:function(){return(new Date).getFullYear()},getCurrentMonth:function(){return(new Date).getMonth()},buildDecadeView:function(){this.buildDecadeViewHeader(),this.buildDecadeViewContent()},buildDecadeViewHeader:function(){var t=this.getData("viewDate").getFullYear(),e=t-t%10,a=e+9;this.setData("decadeStart",e),this.setData("decadeEnd",a)},buildDecadeViewContent:function(){var t,e,a,i=this.getData("viewDate").getFullYear(),n=i-i%10,s=this.buildMinAndMaxYear(),o=this.isYYFormat(),r=s.minYear,l=s.maxYear,p=[];for(t=0;t<3;t++)for(p.push([]),e=0;e<4;e++)a=n+4*t+e-1,o?p[t].push(a>l||a<r?this.emptyCell():this.currentYearCell(a,n)):p[t].push(this.currentYearCell(a,n));this.setData("decadeViewData",p)},emptyCell:function(){return{emptyBlock:!0}},currentYearCell:function(t,e){var a=e+9,i=[],n=this.getCurrentYear();return(t<e||t>a)&&i.push("lyteCalOtherDecadeCell"),n===t&&i.push("lyteDrillCalCurrentYear"),{year:t,emptyBlock:!1,class:i.join(" ")}},buildNavigationalUI:function(){"dropdown"===this.getData("ltPropHeaderType")&&this.buildYears()},initFn:function(){var t=this;this.addContainerClass(),this.checkForMoment(),this.buildViewDate(),this.changeDaysOfWeek(),this.initializeCalendar(),this.$node.revertToToday=function(){t.revert()},this.$node.revertToSelected=function(){t.revertToSelected()}}.observes("currentDatechanged").on("init"),revertToSelected:function(){var t=new Date(this.getData("viewDate").getTime()),e=this.getData("ltPropCurrentDate"),a=this.getData("ltPropFormat"),i=e?this.stringToDate(e,a):new Date,n=new Date;i.setDate(1);var s=new Date(i.getTime());this.setData("viewDate",i),this.setAndBuildView("dateView",event),s.getMonth()===n.getMonth()&&s.getFullYear()===n.getFullYear()?this.setData("showToday",!1):this.setData("showToday",!0),!this.getMethods("onNavigate")||t.getMonth()===s.getMonth()&&t.getFullYear()===s.getFullYear()||this.executeMethod("onNavigate",event,this.getDateFromFormat(t,this.getData("ltPropFormat")),this.getDateFromFormat(s,this.getData("ltPropFormat")),this)},addContainerClass:function(){var t=["lyteCalendarPopup"];"drilldown"===this.getData("ltPropHeaderType")&&t.push("lyteDrillDownCalendar"),this.setData("containerClass",t.join(" "))},checkForMoment:function(){this.isMomentSupported=!!$L.moment},buildViewDate:function(){var t=this.getData("ltPropCurrentDate")?this.stringToDate(this.getData("ltPropCurrentDate"),this.getData("ltPropFormat")):new Date;"Invalid Date"===t&&(t=new Date),t.setDate(1),this.setData("viewDate",t)},initializeCalendar:function(){this.buildNavigationalUI(),this.setAndBuildView("dateView",void 0,!0)},didConnect:function(){this.getData("navYield")||"dropdown"!=this.getData("ltPropHeaderType")||(this.setData("monthDD",this.$node.querySelector(".lyteCalMonthDD")),this.setData("yearDD",this.$node.querySelector(".lyteCalYearDD")),this.setData("callFrmDidcnct",!0))},didDestroy:function(){delete this.$node.revertToToday},removeClass:function(){var t=this.$node.querySelector(".lyteCalSel");t&&t.classList.remove("lyteCalSel")},changeViewDate:function(t){var e=this.getData("ltPropCurrentDate");if(!this.getData("preventObs"))if(e)if("Invalid Date"!==this.stringToDate(e,this.getData("ltPropFormat"))){t=this.getData("ltPropCurrentDate");var a=this.stringToDate(t,this.getData("ltPropFormat"));a.setDate(1),this.setData("viewDate",a),this.buildDateView()}else this.removeClass();else this.removeClass()}.observes("ltPropCurrentDate"),monthHeaderFormatObserver:function(){this.buildDateViewHeader()}.observes("ltPropMonthHeaderFormat"),changeCurrentDate:function(t,e,a){var i,n,s,o,r,l=new Date(this.getData("viewDate").getTime()),p=this.getData("ltPropFormat"),d=this.isYYFormat();p=this.getRelevantFormat(p),"Y"===t?(i=this.getData("viewDate"),r=this.getDateFromFormat(i,p),this.isMomentSupported?n=$L.moment(r,p).add(e,"fullYear",d).getDObj():(i.setYear(i.getFullYear()+e),n=new Date(i.getTime())),this.setData("viewDate",n),this.buildDateView()):"M"===t&&(i=this.getData("viewDate"),r=this.getDateFromFormat(i,p),this.isMomentSupported?n=$L.moment(r,p).add(e,"month",d).getDObj():(i.setMonth(i.getMonth()+e),n=new Date(i.getTime())),this.setData("viewDate",n),this.buildDateView()),s=this.getDateFromFormat(l,this.getData("ltPropFormat")),o=this.getDateFromFormat(n,this.getData("ltPropFormat")),this.getMethods("onNavigate")&&this.executeMethod("onNavigate",a,s,o,this)},changeCurrentYear:function(t){var e,a=this.getData("viewDate"),i=this.isMomentSupported,n=a.getFullYear(),s=this.getData("ltPropFormat"),o=this.isYYFormat(),r=this.getDateFromFormat(a,s),l=r;i?(s=this.getRelevantFormat(s),a=$L.moment(r,s).add(t,"fullYear",o).getDObj()):a.setFullYear(n+t),e=this.getDateFromFormat(a,s),this.setData("viewDate",a),this.getMethods("onNavigate")&&this.executeMethod("onNavigate",event,l,e,this)},changeCurrentDecade:function(t){var e,a=this.getData("viewDate"),i=this.getData("ltPropFormat"),n=this.isMomentSupported,s=this.getDateFromFormat(a,i),o=this.isYYFormat(),r=a.getFullYear(),l=s;i=this.getRelevantFormat(i),n?a=$L.moment(s,i).add(10*t,"fullYear",o).getDObj():a.setFullYear(r+10*t),e=this.getDateFromFormat(a,i),this.setData("viewDate",a),this.getMethods("onNavigate")&&this.executeMethod("onNavigate",event,l,e,this)},getProper:function(t){for(;t&&!t.classList.contains("lyteCalTableCell");)t=t.parentElement;return t},actions:{changeToMonthView:function(t){this.setAndBuildView("monthView",t),this.setData("showToday",!1)},changeToDecadeView:function(t){this.setAndBuildView("decadeView",t),this.setData("showToday",!1)},record:function(t){if(this.setData("prev",!1),t.touches.length>1)this.setData("prev",!0);else{var e=t.targetTouches[0],a={x:e.clientX,y:e.clientY},i=(new Date).getTime();this.setData("cords",a),this.setData("start",i)}},decide:function(t){if(!this.getData("prev")){var e=this.getData("cords"),a=e.x,i=e.y,n=t.changedTouches[0],s=a-n.clientX,o=i-n.clientY,r=this.$node.querySelector(".lyteCalendarPopup").getBoundingClientRect(),l=.2*r.width,p=.15*r.height,d=this.getData("start"),c=(new Date).getTime()-d;p>Math.abs(o)&&l<Math.abs(s)&&c<1e3&&(s<0?this.changeCurrentDate("M",-1,t):s>0&&this.changeCurrentDate("M",1,t))}},previous:function(t,e){var a=this.getData("viewType");"dateView"===a?this.changeCurrentDate(t,-1,e):"monthView"===a?(this.changeCurrentYear(-1),this.buildMonthView()):"decadeView"===a&&(this.changeCurrentDecade(-1),this.buildDecadeView())},next:function(t,e){var a=this.getData("viewType");"dateView"===a?this.changeCurrentDate(t,1,e):"monthView"===a?(this.changeCurrentYear(1),this.buildMonthView()):"decadeView"===a&&(this.changeCurrentDecade(1),this.buildDecadeView())},yearSelected:function(t){var e=this.getData("viewDate"),a=this.getProper(t.target).getAttribute("data-date");e.setYear(a),this.setData("viewDate",e),this.setAndBuildView("monthView",t)},monthSelected:function(t){var e=this.getData("viewDate").getFullYear(),a=this.getProper(t.target).getAttribute("data-date");a=this.getData("monthSystemValues").indexOf(a)+1,this.setData("viewDate",new Date(a+"/1/"+e)),this.setAndBuildView("dateView",t)},dateSelected:function(t){var e,a=this.getProper(t.target);0===t.button&&(0!==(e=this.$node.getElementsByClassName("lyteCalSel")).length&&e[0].classList.remove("lyteCalSel"),this.setData("preventObs",!0),this.setData("ltPropCurrentDate",a.getAttribute("data-date")),this.setData("preventObs",!1),a.classList.add("lyteCalSel"),this.getMethods("onDateSelected")&&this.executeMethod("onDateSelected",t,a.getAttribute("data-date"),this))},today:function(t){this.revert(t)}},methods:{optionSelected:function(t,e,a,i){if("M"==t){var n=this.getData("monthNames").indexOf(a);this.changeCurrentDate(t,n-this.getData("viewDate").getMonth(),e)}else"Y"==t&&this.changeCurrentDate(t,parseInt(a)-this.getData("viewDate").getFullYear(),e)},setClass:function(t,e){var a=e.childComp,i=_lyteUiUtils.getRTL(),n=i?"right":"left",s=a.querySelector(".lyteArrow");a.classList.add("lyteCalendarDropdown"),s.style[n]="20%",i&&(s.style.left="auto")}}});