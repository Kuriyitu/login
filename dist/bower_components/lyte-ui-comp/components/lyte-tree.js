Lyte.Component.register("lyte-tree",{_template:'<template tag-name="lyte-tree">\n  <template is="for" items="{{ltPropData}}" item="item" index="index">\n    <div class="lyteTreeBodyDiv">\n      <lyte-tree-body data-value="{{lyteUiTreeHelp(tempVar, index)}}" data-index="{{lyteUiTreeIndexHelp(indexVar, index)}}" class="{{lyteUiTreeClassHelp(item.defaultState,item.collapsed\n        ,ltPropWrapperOpenClass,ltPropWrapperCloseClass)}}">\n        <div class="mainContainer">\n        <lyte-yield collapsed="{{if(item.collapsed, \'collapsed\', \'\')}}" yield-name="content" list-value="{{item}}" list-index="{{lyteUiTreeHelp(tempVar, index)}}" class="{{lyteUiTreeChildHelp(item , ltPropLeafNodeClass , item.children)}}"></lyte-yield>\n          <template is="if" value="{{expHandlers(expHandlers(expHandlers(item.children.length,\'!==\',0),\'&amp;&amp;\',expHandlers(item.children,\'!==\',undefined)),\'&amp;&amp;\',expHandlers(item.collapsed,\'!\'))}}"><template case="true">\n            <template is="if" value="{{expHandlers(expHandlers(item.defaultState,\'!\'),\'||\',expHandlers(item.defaultState,\'===\',&quot;open&quot;))}}"><template case="true">\n              <lyte-tree class="lyteTreeOpened" temp-var="{{lyteUiTreeHelp(tempVar, index)}}" index-var="{{lyteUiTreeIndexHelp(indexVar, index)}}" lt-prop-data="{{item.children}}" id="{{ltPropId}}" lt-prop-tree-lines="{{ltPropTreeLines}}" lt-prop-yield="{{ltPropYield}}" lt-prop-open-class="{{ltPropOpenClass}}" lt-prop-wrapper-open-class="{{ltPropWrapperOpenClass}}" lt-prop-leaf-node-class="{{ltPropLeafNodeClass}}" lt-prop-close-class="{{ltPropCloseClass}}" lt-prop-wrapper-close-class="{{ltPropWrapperCloseClass}}" on-toggle="{{method(\'onToggle\')}}" on-toggle-end="{{method(\'onToggleEnd\')}}">\n                <template is="registerYield" yield-name="content" from-parent="">\n                 </template>\n              </lyte-tree>\n            </template><template case="false"><template is="if" value="{{expHandlers(item.defaultState,\'===\',&quot;close&quot;)}}"><template case="true">\n              <lyte-tree class="lyteTreeClosed" temp-var="{{lyteUiTreeHelp(tempVar, index)}}" index-var="{{lyteUiTreeIndexHelp(indexVar, index)}}" lt-prop-data="{{item.children}}" id="{{ltPropId}}" lt-prop-tree-lines="{{ltPropTreeLines}}" lt-prop-yield="{{ltPropYield}}" lt-prop-open-class="{{ltPropOpenClass}}" lt-prop-wrapper-open-class="{{ltPropWrapperOpenClass}}" lt-prop-leaf-node-class="{{ltPropLeafNodeClass}}" lt-prop-close-class="{{ltPropCloseClass}}" lt-prop-wrapper-close-class="{{ltPropWrapperCloseClass}}" on-toggle="{{method(\'onToggle\')}}" on-toggle-end="{{method(\'onToggleEnd\')}}">\n                <template is="registerYield" yield-name="content" from-parent="">\n                 </template>\n              </lyte-tree>\n            </template></template></template></template>\n         </template></template>\n        </div>\n      </lyte-tree-body>\n  </div>\n  </template>\n</template>',_dynamicNodes:[{type:"attr",position:[1]},{type:"for",position:[1],dynamicNodes:[{type:"attr",position:[1,1]},{type:"attr",position:[1,1,1,1]},{type:"insertYield",position:[1,1,1,1]},{type:"attr",position:[1,1,1,3]},{type:"if",position:[1,1,1,3],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"registerYield",position:[1,1],dynamicNodes:[]},{type:"componentDynamic",position:[1]}]},false:{dynamicNodes:[{type:"attr",position:[0]},{type:"if",position:[0],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"registerYield",position:[1,1],dynamicNodes:[]},{type:"componentDynamic",position:[1]}]}},default:{}}]}},default:{}}]}},default:{}},{type:"componentDynamic",position:[1,1]}]}],_observedAttributes:["ltPropData","ltPropWrapperOpenClass","ltPropWrapperCloseClass","ltPropOpenClass","ltPropCloseClass","ltPropLeafNodeClass","treeHeight","ltPropStateAttr","heightTransArr","tempVar","indexVar"],data:function(){return{ltPropData:Lyte.attr("array",{default:[]}),ltPropWrapperOpenClass:Lyte.attr("string",{default:""}),ltPropWrapperCloseClass:Lyte.attr("string",{default:""}),ltPropOpenClass:Lyte.attr("string",{default:""}),ltPropCloseClass:Lyte.attr("string",{default:""}),ltPropLeafNodeClass:Lyte.attr("string",{default:"lyteTreeHasNoChild"}),treeHeight:Lyte.attr("number",{default:0}),ltPropStateAttr:Lyte.attr("string",{default:""}),heightTransArr:Lyte.attr("array",{default:[]}),tempVar:Lyte.attr("string",{default:""}),indexVar:Lyte.attr("string",{default:""})}},openrecursive:function(e){if(e.length){var t=e[0];if(e.shift(),!t||t.classList.contains("lyteTreeOpened"))return void this.openrecursive(e);var s=t.parentElement.querySelector("lyte-tree-icon");clearTimeout(t._treetime),t.classList.remove("lyteTreeClosed"),t.classList.add("lyteTreeOpened"),s.classList.remove("lyteIconClosed"),s.classList.add("lyteIconOpened"),t.style.display="",t.style.height="auto",this.data.ltPropCloseClass&&s.classList.remove(this.data.ltPropCloseClass),this.data.ltPropOpenClass&&s.classList.add(this.data.ltPropOpenClass),t._treetime=setTimeout(this.heightcalc.bind(this,t,e),0)}},heightcalc:function(e,t){if(document.body.contains(e)){var s=e.getBoundingClientRect().height;e.style.height=0,0==s?this.transEnd(e,t):setTimeout(this.heightset.bind(this,e,t,s),20)}else this.openrecursive(t)},heightset:function(e,t,s){document.body.contains(e)?(e.style.height=s+"px",e._trn=this.transEnd.bind(this,e,t),e.addEventListener("transitionend",e._trn)):this.openrecursive(t)},transEnd:function(e,t){e.style.height="auto",e.removeEventListener("transitionend",e._trn),delete e._trn,this.openrecursive(t)},stateChange:function(e){if(e.newValue){for(var t=e.newValue,s=[],l=1;l<=t.length;l++)s.push(this.$node.querySelector("lyte-tree[temp-var='"+t.slice(0,l)+"']"));this.openrecursive(s),this.setData("ltPropStateAttr","")}}.observes("ltPropStateAttr"),didConnect:function(){},methods:{onToggle:function(){},onToggleEnd:function(){}}}),_lyteUiUtils.registeredCustomElements["lyte-tree-icon"]||(_lyteUiUtils.registeredCustomElements["lyte-tree-icon"]=!0,Lyte.createCustomElement("lyte-tree-icon",{connectedCallback:function(){var e=this.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement;e.classList.contains("lyteTreeClosed")&&(e.style.display="none"),this.hasAttribute("lyte-custom-icon")||(this.innerHTML='<i class="arrow up"></i>')},constructor:function(){for(var e,t=this.parentElement;"LYTE-TREE"!==t.nodeName;)t=t.parentElement;"LYTE-TREE"===t.nodeName&&(t=t.component);var s=this,l=s,n=t.$node.previousElementSibling;void 0!=n&&"content"===n.getAttribute("yield-name")&&(l=n.querySelector("lyte-tree-icon")),t.$node.classList.contains("lyteTreeOpened")?(l.className=t.getData("ltPropOpenClass"),l.classList.add("lyteIconOpened")):(l.className=t.getData("ltPropCloseClass"),l.classList.add("lyteIconClosed"));$L(this).closest("lyte-tree").get(0).component.data.ltPropData,$L(this).closest("lyte-tree-body").get(0).getAttribute("data-value").split("");0===this.classList.length&&(this.className=t.getData("ltPropCloseClass"),this.classList.add("lyteIconClosed")),this.addEventListener("click",function(n){var a,i;if(n.preventDefault(),a=i=this)for(;"LYTE-TREE-BODY"!==a.nodeName;)a=a.parentElement;if("LYTE-TREE-BODY"===a.nodeName){var r=a.querySelector("lyte-tree");if(r&&!r.classList.contains("treeTransRunning")){var o=r.component;function p(){r.classList.remove("lyteTreeOpened"),a.className=t.getData("ltPropWrapperCloseClass"),r.classList.add("lyteTreeClosed"),this.style.height="auto",i.style.pointerEvents="auto",r.style.display="none",s.className=t.getData("ltPropCloseClass"),l.classList.add("lyteIconClosed"),r.classList.remove("treeTransRunning"),this.removeEventListener("transitionend",p)}function d(){a.className=t.getData("ltPropWrapperOpenClass"),this.style.height=o.getData("treeHeight")+"px",this.style.height="auto",i.style.pointerEvents="auto",s.className=t.getData("ltPropOpenClass"),console.log("check"),s.classList.add("lyteIconOpened"),r.classList.remove("treeTransRunning"),this.removeEventListener("transitionend",d)}if(r.classList.contains("lyteTreeOpened")){var c=r.getBoundingClientRect().height;r.style.height=c+"px",setTimeout(function(){r.getBoundingClientRect().height;r.style.height="0px",r.classList.add("treeTransRunning"),r.addEventListener("transitionend",p)},10)}else r.classList.remove("lyteTreeClosed"),r.classList.add("lyteTreeOpened"),r.style.display="",r.style.height="auto",o.setData("treeHeight",r.getBoundingClientRect().height),r.style.height="0px",setTimeout(function(){r.style.height=o.getData("treeHeight")+"px",r.classList.add("treeTransRunning"),r.addEventListener("transitionend",d)},30)}}var m=a.parentElement.parentElement;function y(){var e=m.component.getData("ltPropData"),t=a.getAttribute("data-index").split(" ");if(t.length<2){void 0!==(s=e[l=t[0]])&&Lyte.objectUtils(s,"add","collapsed",!1)}else{for(var s=e,l=1;l<t.length;l++)s=e[t[l]];Lyte.objectUtils(s,"add","collapsed",!1)}}m&&m.component.getMethods("onToggle")&&(e=m.component.executeMethod("onToggle",a,n,m)),void 0!==e?e&&e.then?e.then(function(e){y()},function(){}):e&&y():y(),m&&m.component.getMethods("onToggleEnd")&&(e=m.component.executeMethod("onToggleEnd",a,n,m))}.bind(this))},static:{observedAttributes:{}}}));